{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","console","log","target","placeholder","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,QAmBfK,YAAY,yBAK5BjB,EAAYkB,WAAa,CACrBjB,c,OAAekB,EAAUC,KAAKC,Y,2BChCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCCRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAON,IACtB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B4B,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAXAC,qBAAY,WACRxB,EAAQC,GACHwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAACpB,IAEGqB,EDZoBI,CAAazB,GAAhCO,EAF2B,EAE3BA,KAAMa,EAFqB,EAErBA,QAEd,OACI,oCACA,4BAAKpB,GAEL,yBAAKgB,UAAU,gBACLI,GAAW,0CAETb,EAAKE,KAAK,SAAAC,GACR,OAAQ,kBAAC,EAAD,eACFgB,IAAOhB,EAAIC,IAELD,UEhBrBiB,EAAe,WAAO,IAAD,EAEMhD,mBAAS,CAAC,cAFhB,mBAEvBiD,EAFuB,KAEXlD,EAFW,KAU9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAEQkD,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACG0B,IAAO1B,EACPA,SAAUA,U,MClBtC6B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f85180bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        console.log(e.target.value);\n        setInputValue(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2) {\n            setCategories( categoria => [inputValue, ...categoria]);\n            setInputValue('');\n        }  \n    }\n\n    \n\n    return (\n        <form onSubmit= {handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange = {handleInputChange}\n                placeholder=\"Serie a buscar ...\"\n            />\n        </form >\n    )\n}\nAddCategory.protoTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=N5c884Vu1NBT6KU2SFokJp2yQMOY9OL0`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    // console.log(gifs);\n    return gifs;\n    // el gifs esta retornando un async que se trabaja mediante una promesa \n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    // console.log({id, title, url});\n    return (\n        <div className=\"card\">\n            <img src={url} alt = {title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({category}) => {\n    \n    const { data, loading } =  useFetchGifs(category);\n\n    return (\n        <>\n        <h3>{category}</h3>\n        \n        <div className=\"card-content\">\n                { loading && <p>Cargando...</p>}\n                {\n                    data.map( img => {\n                      return  <GifGridItem \n                            key = {img.id} \n                            // img = { img }\n                            { ... img}\n                         />\n                    })\n                }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect ( () => {\n        getGifs(category)\n            .then( img => {\n                setstate({\n                    data: img,\n                    loading: false\n                })\n            })\n            \n    }, [category])\n\n    return state;\n\n}\n","import React , {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n   \n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const HandleAdd = () => {\n    //     let serie = 'Naruto'\n    //     // setCategories([...categories, serie] );\n    //     setCategories(categoria => [... categoria, serie] );\n    // }\n    \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories} />\n            <hr></hr>\n            <ul>\n                {\n                    categories.map(category => \n                        (<GifGrid \n                            key = {category}\n                            category={category}\n                        />)\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}